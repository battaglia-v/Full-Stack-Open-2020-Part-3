{"version":3,"sources":["components/Form.js","components/PersonList.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Form","newName","handleNameChange","handleNumberChange","newNumber","addName","value","onChange","type","onClick","PersonList","filteredPersons","deletePerson","map","person","key","name","number","id","Filter","props","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","includes","className","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","activeFilter","setActiveFilter","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","filterToShow","filter","toLowerCase","event","target","console","log","preventDefault","personObject","length","window","alert","personToModify","find","modifiedPerson","returnedPerson","setTimeout","catch","error","dataBaseResponse","concat","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce5745e9.chunk.js","sourcesContent":["import React from \"react\"\n\n\nconst Form = ({ \n\n    newName, \n    handleNameChange, \n    handleNumberChange, \n    newNumber, \n    addName\n    \n}) => {\n\n        return (\n            <form value={newName}>\n\n                <div>\n                    name:\n          <input onChange={handleNameChange} value={newName} />\n                </div>\n                <div>\n                    number:\n          <input onChange={handleNumberChange} value={newNumber} />\n                </div>\n                <div>\n                    <button type=\"submit\" onClick={addName}>add</button>\n                </div>\n            </form>\n        );\n    }\n\n\nexport default Form\n\n\n\n\n// Old Code Below: prior to refactoring 'Form' component // \n\n// < form\n// value = { newName }\n//     >\n\n//     <h2>add a new</h2>\n//     <div>\n//         name:\n//           <input\n//             onChange={handleNameChange}\n//             value={newName}\n//         />\n//     </div>\n//     <div>\n//         number:\n//           <input\n//             onChange={handleNumberChange}\n//             value={newNumber}\n//         />\n//     </div>\n//     <div>\n//         <button\n//             type=\"submit\"\n//             onClick={addName}\n//         >add</button>\n//     </div>\n//       </form >","import React from 'react'\n\n\n\nconst PersonList = ({ filteredPersons, deletePerson }) => {\n\n  return (\n     <>\n      {filteredPersons.map(person => \n            <p key={person.name}> {person.name} {person.number}\n                  <button\n            onClick={() => deletePerson(person.id, person.name)}>\n                   delete\n                  </button>\n           </p>\n      )}\n      </>\n\n  )}\n  \n\n\n\n\nexport default PersonList","import React from 'react'\n\nconst Filter = (props) => {\n\n    return (\n        <div>\n            filter shown with <input onChange={props.handleFilterChange} />\n        </div>\n  \n    )\n}\n\nexport default Filter\n\n\n\n\n","\n    import axios from 'axios'\n    const baseUrl = '/api/persons'\n\n    const getAll = () => {\n        const request = axios.get(baseUrl)\n        return request.then(response => response.data)\n    }\n\n    const create = newObject => {\n        const request = axios.post(baseUrl, newObject)\n        return request.then(response => response.data)\n\n    }\n\n    const update = (id, newObject) => {\n        const request = axios.put(`${baseUrl}/${id}`, newObject)\n        return request.then(response => response.data)\n}\n\n    const deletePerson = (id) => {\n        const request = axios.delete(`${baseUrl}/${id}`)\n        return request.then(response => response.data)\n    }\n        \n\n    \n\n    export default {\n        getAll,\n        create,\n        update,\n        deletePerson\n    }\n\n    ","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (message.includes('Added') || message.includes('Updated')) {\n                \n    return (\n        <div className=\"addedMessage\">\n            {message}\n        </div>\n    )\n    }\n\n    if (message.includes('Error') || message.includes('Deleted')) {\n\n        return (\n            <div className=\"errorMessage\">\n                {message}\n            </div>\n        )\n\n    }\n}\n\nexport default Notification\n\n","import React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Persons from './components/PersonList'\nimport Filter from './components/Filter'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\n\n\nconst App = () => {\n\n \n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [activeFilter, setActiveFilter] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personsService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n\n\n\n\n  const filterToShow = activeFilter\n    ? persons\n    : persons.filter(person => {\n      return person.name.toLowerCase().includes(newFilter.toLowerCase())\n    })\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    \n\n  const deletePersonOf = (id, name) => {\n    if (window.confirm(`Do you really want to delete ${name}?`)) { \n     \n      setPersons(persons.filter(person => person.id !== id))\n      personsService\n      .deletePerson(id)\n      .then(() => {\n        setErrorMessage(\n          `Deleted ${name}`\n        )\n            setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n    } )\n  }\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    setActiveFilter(false)\n    console.log(newFilter)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n   \n\n     const duplicateName = persons.filter(person => person.name === newName) \n\n     if (duplicateName.length !== 0 ) {\n       window.alert( `${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      \n       // Making a copy of the 'duplicateName array' as we cannot access the duplicateName (here we are in curly braces)\n       const personToModify = persons.find(person => person.name === newName)\n\n       const modifiedPerson = {...personToModify, number: newNumber}\n     \n       return (\n\n        personsService\n          .update(modifiedPerson.id, modifiedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== modifiedPerson.id ? person : returnedPerson))\n            setErrorMessage(\n              `Updated ${modifiedPerson.name}`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000)\n            setNewName('')\n            setNewNumber('')\n\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Error - ${modifiedPerson.name} has already been removed from the server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000)\n          }\n          )\n       )}\n        \n\n     return (\n\n  // add new name + number (person object) to the database // \n  personsService\n    .create(personObject)\n    .then(dataBaseResponse => {\n      setPersons(persons.concat(dataBaseResponse))\n      setNewName('')\n      setNewNumber('')\n      setErrorMessage(\n        `Added ${personObject.name}'`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    })\n    \n     )\n  }\n\n\n\n \n  \n  \n      \n\n  return (\n    <div>\n     <h2>Phonebook</h2>\n     <Notification message={errorMessage}/>\n\n     <Filter handleFilterChange={handleFilterChange} />\n\n     <h3>add a new</h3>\n\n     <Form newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} addName={addName}/>\n\n     <h2>Numbers</h2>\n    <Persons filteredPersons={filterToShow} deletePerson={deletePersonOf} />\n\n\n    </div>\n  )\n}\n\n  export default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios'\n\nconst promise = axios.get(\"http://localhost:3001/persons\");\n\npromise.then((response) => {\n  console.log(response);\n});\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}